package com.curtin.securehire.security;

import com.curtin.securehire.entity.Recruiter;
import com.curtin.securehire.entity.User;
import com.curtin.securehire.repository.RecruiterRepository;
import com.curtin.securehire.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import java.util.Collections;
import java.util.List;
import java.util.Optional;

@Service
public class MyRecruiterDetailsService implements UserDetailsService {

    @Autowired
    private RecruiterRepository recruiterRepository;

    @Override
    public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {

        Optional<Recruiter> recruiter = recruiterRepository.findByEmail(email);
        if(recruiter.isEmpty()){
            throw new UsernameNotFoundException("User not found");
        }

        // if No user found
        List<SimpleGrantedAuthority> authorities = Collections.singletonList(new SimpleGrantedAuthority(recruiter.get().getRole().getName()));
        return new org.springframework.security.core.userdetails.User(recruiter.get().getEmail(), recruiter.get().getPassword(), authorities);
    }
}
